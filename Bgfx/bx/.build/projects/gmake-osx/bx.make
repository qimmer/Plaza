# GNU Make project makefile autogenerated by GENie
ifndef config
  config=debug32
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = gcc
CXX = g++
AR  = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = bx.make

ifeq ($(config),debug32)
  OBJDIR              = ../../osx32_clang/obj/x32/Debug/bx
  TARGETDIR           = ../../osx32_clang/bin
  TARGET              = $(TARGETDIR)/libbxDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -fno-rtti -fno-exceptions -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -fno-rtti -fno-exceptions -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -m32
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR              = ../../osx32_clang/obj/x32/Release/bx
  TARGETDIR           = ../../osx32_clang/bin
  TARGET              = $(TARGETDIR)/libbxRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -fno-rtti -fno-exceptions -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -fno-rtti -fno-exceptions -Wshadow -m32 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -m32
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR              = ../../osx64_clang/obj/x64/Debug/bx
  TARGETDIR           = ../../osx64_clang/bin
  TARGET              = $(TARGETDIR)/libbxDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -fno-rtti -fno-exceptions -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -fno-rtti -fno-exceptions -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -m64
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR              = ../../osx64_clang/obj/x64/Release/bx
  TARGETDIR           = ../../osx64_clang/bin
  TARGET              = $(TARGETDIR)/libbxRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -fno-rtti -fno-exceptions -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -fno-rtti -fno-exceptions -Wshadow -m64 -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -m64
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR              = obj/Debug/bx
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libbxDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DBX_CONFIG_DEBUG=1
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -fno-rtti -fno-exceptions -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -fno-rtti -fno-exceptions -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS)
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = obj/Release/bx
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libbxRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"../../../include/compat/osx" -I"../../../include" -I"../../../3rdparty"
  INCLUDES           +=
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -fno-rtti -fno-exceptions -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -fno-rtti -fno-exceptions -Wshadow -Wfatal-errors -msse2 -Wunused-value -Wundef -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS)
  LDDEPS             +=
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJECTS := \
	$(OBJDIR)/src/allocator.o \
	$(OBJDIR)/src/bx.o \
	$(OBJDIR)/src/commandline.o \
	$(OBJDIR)/src/crtnone.o \
	$(OBJDIR)/src/debug.o \
	$(OBJDIR)/src/dtoa.o \
	$(OBJDIR)/src/easing.o \
	$(OBJDIR)/src/file.o \
	$(OBJDIR)/src/filepath.o \
	$(OBJDIR)/src/hash.o \
	$(OBJDIR)/src/math.o \
	$(OBJDIR)/src/mutex.o \
	$(OBJDIR)/src/os.o \
	$(OBJDIR)/src/process.o \
	$(OBJDIR)/src/semaphore.o \
	$(OBJDIR)/src/settings.o \
	$(OBJDIR)/src/sort.o \
	$(OBJDIR)/src/string.o \
	$(OBJDIR)/src/thread.o \
	$(OBJDIR)/src/timer.o \
	$(OBJDIR)/src/url.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJDIRS := \
	$(OBJDIR) \
	$(OBJDIR)/src \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(EXTERNAL_LIBS) $(RESOURCES) | $(TARGETDIR) $(OBJDIRS)
	@echo Archiving bx
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
endif
	$(SILENT) $(LINKCMD) $(OBJECTS) 2>&1 > /dev/null | sed -e '/.o) has no symbols$$/d'
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning bx
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

$(OBJDIR)/src/allocator.o: ../../../src/allocator.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/bx.o: ../../../src/bx.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/commandline.o: ../../../src/commandline.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/crtnone.o: ../../../src/crtnone.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/debug.o: ../../../src/debug.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/dtoa.o: ../../../src/dtoa.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/easing.o: ../../../src/easing.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/file.o: ../../../src/file.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/filepath.o: ../../../src/filepath.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/hash.o: ../../../src/hash.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/math.o: ../../../src/math.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/mutex.o: ../../../src/mutex.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/os.o: ../../../src/os.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/process.o: ../../../src/process.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/semaphore.o: ../../../src/semaphore.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/settings.o: ../../../src/settings.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/sort.o: ../../../src/sort.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/string.o: ../../../src/string.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/thread.o: ../../../src/thread.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/timer.o: ../../../src/timer.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/url.o: ../../../src/url.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
